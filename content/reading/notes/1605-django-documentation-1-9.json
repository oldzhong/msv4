{"date": "2016-05-21", "source": "b9ad410f-fa38-48e9-98a3-39d0ceb35111.html", "notes": [{"content": "Some of these form interface elements - text input or checkboxes - are fairly simple and are built into HTML itself.Others are much more complex; an interface that pops up a date picker or allows you to move a slider or manipulatecontrols will typically use JavaScript and CSS as well as HTML form <input> elements to achieve these effects.", "comment": "\u8868\u5355\u8981\u5904\u7406\u5404\u79cd\u590d\u6742\u7684\u8f93\u5165", "time": "2016-05-21 12:30:10"}, {"content": "Django handles three distinct parts of the work involved in forms:\u2022 preparing and restructuring data to make it ready for rendering\u2022 creating HTML forms for the data\u2022 receiving and processing submitted forms and data from the client", "time": "2016-05-21 12:34:44"}, {"content": "When we instantiate a form, we can opt to leave it empty or pre-populate it, for example with:\u2022 data from a saved model instance (as in the case of admin forms for editing)\u2022 data that we have collated from other sources\u2022 data received from a previous HTML form submission", "time": "2016-05-21 12:39:00"}, {"content": "A Form instance has an is_valid() method, which runs validation routines for all its\ufb01elds. When this method iscalled, if all\ufb01elds contain valid data, it will:\u2022 return True\u2022 place the form\u2019s data in its cleaned_data attribute.", "time": "2016-05-21 12:41:59"}, {"content": "All form classes are created as subclasses of django.forms.Form, including the ModelForm, which you en-counter in Django\u2019s admin.\nModels and FormsIn fact if your form is going to be used to directly add or edit a Django model, a ModelForm can save you a greatdeal of time, effort, and code, because it will build a form, along with the appropriate\ufb01elds and their attributes, froma Model class.", "comment": "django admin\u501f\u52a9ModelForm\u6765\u5feb\u901f\u5b9e\u73b0\u8868\u5355\u529f\u80fd", "time": "2016-05-21 12:47:54"}, {"content": "An unbound form has no data associated with it. When rendered to the user, it will be empty or will containdefault values.\u2022 A bound form has submitted data, and hence can be used to tell if that data is valid. If an invalid bound form isrendered, it can include inline error messages telling the user what data to correct.The form\u2019s is_bound attribute will tell you whether a form has data bound to it or not.", "time": "2016-05-21 12:50:19"}, {"content": "There are other output options though for the <label>/<input> pairs:\u2022 {{ form.as_table }} will render them as table cells wrapped in <tr> tags\u2022 {{ form.as_p }} will render them wrapped in <p> tags\u2022 {{ form.as_ul }} will render them wrapped in <li> tagsNote that you\u2019ll have to provide the surrounding <table> or <ul> elements yourself.", "time": "2016-05-21 12:57:44"}, {"content": "Using class-based views\nAt its core, a class-based view allows you to respond to different HTTP request methods with different class instancemethods, instead of with conditionally branching code inside a single view function.", "comment": "\u907f\u514d\u4e0d\u4f18\u96c5\u7684\u5206\u652f\u5224\u65ad", "time": "2016-05-26 10:45:53"}, {"content": "ThereareseveralcommandswhichyouwillusetointeractwithmigrationsandDjango\u2019shandlingofdatabaseschema:\u2022 migrate, which is responsible for applying migrations, as well as unapplying and listing their status.\u2022 makemigrations, which is responsible for creating new migrations based on the changes you have made toyour models.\u2022 sqlmigrate, which displays the SQL statements for a migration.\u2022 showmigrations, which lists a project\u2019s migrations.", "comment": "\u6ce8\u610f\u7b2c\u4e09\u4e2a\uff0c\u5047\u5982dba\u4e0d\u5141\u8bb8\u4f7f\u7528\u57fa\u4e8eorm\u7684migrate\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u751f\u6210ddl", "time": "2016-05-26 22:10:21"}, {"content": "The Library.filter() method takes two arguments:1. The name of the\ufb01lter \u2013 a string.2. The compilation function \u2013 a Python function (not the name of the function as a string).You can use register.filter() as a decorator instead:@register.filter(name='cut')def cut(value, arg):return value.replace(arg, '')\n@register.filterdef lower(value):return value.lower()", "comment": "\u88c5\u9970\u5668\u7684\u65b9\u5f0f\u6ce8\u518cfilter\u770b\u8d77\u6765\u66f4\u4f18\u96c5", "time": "2016-05-27 10:39:14"}], "duokanbookid": "s53128c5ec8065975g785d1c5375532c", "title": "Django Documentation 1.9"}
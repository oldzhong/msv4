{"date": "2013-10-01", "source": "8774d34a-c8c4-4996-8d46-be856dbbab34.html", "notes": [{"content": ":230,$w \n newfileSaves from line 230 to end of file in newfile", "time": "2013-10-01 11:37:31"}, {"content": "Global replacement really uses two ex commands: :g (global) and :s (substitute). Sincethe syntax of global replacement commands can get fairly complex, let\u2019s look at it instages", "time": "2013-10-01 11:42:01"}, {"content": "Besides the / character, you may use any nonalphanumeric, nonwhitespace char-acter as your delimiter, except backslash, double quotes, and the vertical bar (\\,\"\n, and |). This is particularly handy when you have to make a change to a pathname.:%s;/user1/tim;/home/tim;g", "time": "2013-10-01 11:47:11"}, {"content": ":%s/child/children/g", "time": "2013-10-01 11:51:54"}, {"content": ":%s/child\u25a1/children\u25a1/g", "time": "2013-10-01 11:51:57"}, {"content": "After some thought, you remember that brackets allow you tospecify one character from among a list, so you realize a solution::%s/child[\u25a1,.;:!?]/children[\u25a1,.;:!?]/g", "time": "2013-10-01 11:52:30"}, {"content": "You need to save the space andpunctuation marks inside a \\( and \\). Then you can \u201creplay\u201d them with a \\1. Here\u2019sthe next attempt::%s/child\\([\u25a1,.;:!?]\\)/children\\1/g", "time": "2013-10-01 11:51:38"}, {"content": "The  syntax  may  seem  awfully  complicated,  but  thiscommand sequence can save you a lot of work. Any time you spend learning regularexpression syntax will be repaid a thousandfold!", "time": "2013-10-01 11:53:43"}, {"content": "As it turns out, vi (but not all other programs that use regular expressions) has a specialsyntax for saying \u201conly if the pattern is a complete word.\u201d", "time": "2013-10-01 11:55:35"}, {"content": "So,in the example task, \\<child\\> will find all instances of the word child, whether followedby punctuation or spaces. Here\u2019s the substitution command you should use:", "time": "2013-10-01 11:56:00"}, {"content": "The global replacement keeps track of whether an i, r, or a is saved. In that way, boxis changed to square only when box is part of the routine\u2019s name.:g/mg[ira]box/s/box/square/g", "time": "2013-10-01 11:58:19"}, {"content": "Autocommands include any valid Vim commands. Vim uses events to execute com-mands. Some examples of Vim events include:\nBufNewFileTriggers an associated command when Vim begins editing a new file BufReadPreTriggers an associated command before Vim moves to a new buffer BufRead, BufReadPost\nTrigger an associated command when editing a new buffer, but after reading the file BufWrite, BufWritePre\nTrigger an associated command before writing a buffer to a file FileTypeTriggers an associated command after setting the filetype\nVimResizedTriggers an associated command after a Vim window size has changed WinEnter, WinLeave\nTrigger an associated command upon entering or leaving a Vim window, respectively\nCursorMoved, CursorMovedI\nTrigger an associated command every time the cursor moves in normal mode or in insert mode, respectively\nAltogether there are almost 80 Vim events. For any of these events, you can define an automatic autocmd that executes when that event occurs. The autocmd format is:\nautocmd [group] event pattern [nested] command", "time": "2013-10-18 01:35:41"}, {"content": "We also remind you that the built-in Vim help is invaluable. The most productive helptopics we recommend are:help autocmdhelp scriptshelp variableshelp functionshelp usr_41.txt", "time": "2013-10-01 04:46:13"}], "duokanbookid": "j4d04f1d550gd739d0g3gf92819f9639", "title": "Learning the vi and Vim Editors-2"}
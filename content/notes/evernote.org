#+TITLE: Evernote
#+DATE: 2016-04-13

* Evernote API
几年前写过一段代码来从Evernote服务器端获取笔记：
#+BEGIN_SRC python
# -*- coding: utf-8 -*-
#
# Copyright 2013, Not All Rights Reserved.
# Author:   zy
# Email:    elvestar@qq.com
# Created:  2013-09-26 01:13
#
# Description: 

from evernote.edam.userstore import UserStore
from evernote.edam.notestore import NoteStore

import thrift.protocol.TBinaryProtocol as TBinaryProtocol
import thrift.transport.THttpClient as THttpClient


print "代码演示了如何调用中文Evernote（印象笔记）的API来访问开发者自己的笔记。"\
    "主要难点是理解Thrift RPC的使用，以及UserStore和NoteStore这两个核心概念"
print "获得了UserStore和NoteStore之后，事情就变得好办了。"\
    "可参考：http://dev.yinxiang.com/documentation/reference/"

# 开发者Token和note_store_url使用你从官方获得的
# 链接：http://dev.yinxiang.com/documentation/cloud/chapters/Authentication.php#devtoken
# user_store_url是通用的
dev_token = "Filled it with your own token"
user_store_url = "https://app.yinxiang.com/edam/user"
note_store_url = "https://app.yinxiang.com/shard/s9/notestore"

# 建立 UserStore 的 Client
user_store_client = THttpClient.THttpClient(user_store_url)
user_store_proto = TBinaryProtocol.TBinaryProtocol(user_store_client)
user_store = UserStore.Client(user_store_proto, user_store_proto)

print "\n输出用户的信息:"
user = user_store.getUser(dev_token)
print user.username, user.id

# 建立 NoteStore 的 Client 
note_store_client = THttpClient.THttpClient(note_store_url)
note_store_proto = TBinaryProtocol.TBinaryProtocol(note_store_client)
note_store = NoteStore.Client(note_store_proto, note_store_proto)

print "\n输出各个笔记本的信息:"
notebooks = note_store.listNotebooks(dev_token)
for notebook in notebooks:
  print notebook.name, notebook.serviceCreated
#+END_SRC
* 回顾
** 被印象笔记的API折腾了一把 <2016-04-14 四>
记下要点：
1. 使用 findNotesMetadata来获取笔记列表，findNotes 已经被废弃。
2. findNotesMetadata 的有个参数是指定取多少篇笔记，如果传得少的话，取回的是
   不全的（之前我总是以为印象笔记服务器端故意不返回全集）。
3. 官网的实例还是基本不通，就如同几年前一样，想要通，还是得要配置Thrift Client。

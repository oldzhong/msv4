#+TITLE: Nginx
#+DATE: 2014-05-31
#+KEYWORDS: Web 服务器


* 配置 Nginx
** 静态内容
如下配置，通过/path/to 开头的 url 访问，其实际访问的文件位于本地的
/Users/elvestar/github/elvestar.github.io/path/to 路径。
#+BEGIN_SRC sh
server {
    root /Users/elvestar/github/elvestar.github.io;

    location / {
    }
}
#+END_SRC

** 负载均衡
upstream 这个里面可以配置多个 ip:port，nginx 会通过轮询的方式来将请求负载到
各个 ip:port 上。当然，nginx 也支持根据访问者的 ip 将来自该访问者的请求固化
到某个 ip:port 上。

** 反向代理
这个在 location 里面设置，一般上，会与 upstream 合用。

** location
~ 符号代表使用正则。

** 日志打印
默认情况下，Nginx 的日志是不带 Cookie 的，我想把 Cookie 中的 minos_uid 字段打印
到日志中，以记录访问者是谁。

可以在 nginx.conf 中作如下配置：
#+BEGIN_SRC sh
http {
    log_format log_with_cookie '$remote_addr $server_addr [$time_local] "$request" '
                               '$status $body_bytes_sent "$http_referer" "$http_user_agent" $minos_uid ';
    access_log  ./logs/access.log  log_with_cookie;
...
...
    server { 
        listen 8099;
        server_name www.example.org *.example.org;

        set $minos_uid "-";
        if ( $http_cookie ~* "(minos_uid=\S+)(;.*|$)") {
            set $minos_uid $1;
        }       
...
...
} 

#+END_SRC

该配置会从 Cookie 中取出 minos_uid 字段，赋给 $minos_uid。

** 遇到问题
minos.css 被~* /minos 这个 location 给捕获了。我将之改为~* /minos/后，问题
解决。

* 实现 Nginx 模块
Nginx特性：
1. 多个Worker进程，一般建议每个Worker占一个CPU核。
2. 每个Worker以异步非阻塞的方式来处理请求。
3. ~ngx_http_request_t~ 是Nginx对一个http请求的封装。一个http请求，包含请求行、请求头、请求体、响应行、响应头、响应体。
   
- [[http://tengine.taobao.org/book/chapter_03.html][handler模块(100%) — Nginx开发从入门到精通]]
#+BEGIN_EXAMPLE
在上一章提到，配置文件中使用location指令可以配置content handler模块，当Nginx系统启动的时候，每个handler模块都有一次机会把自己关联到对应的location上。如果有多个handler模块都关联了同一个location，那么实际上只有一个handler模块真正会起作用。当然大多数情况下，模块开发人员都会避免出现这种情况。

handler模块处理的结果通常有三种情况: 处理成功，处理失败（处理的时候发生了错误）或者是拒绝去处理。在拒绝处理的情况下，这个location的处理就会由默认的handler模块来进行处理。例如，当请求一个静态文件的时候，如果关联到这个location上的一个handler模块拒绝处理，就会由默认的ngx_http_static_module模块进行处理，该模块是一个典型的handler模块。
#+END_EXAMPLE

* 问题记录
** Resource interpreted as Stylesheet but transferred with MIME type text/plain <2015-07-28 二>
结果导致了浏览器获得 css 文件后不会当做 css 类型的文件来处理，进而导致页面样式
无法生效。

解法：在 location 的配置里加入 ~include /path/to/mime.types;~ 。例如：
#+BEGIN_SRC sh
    location ~* /static/v3.0 {                                                                     
        root /home/work/minos/minosweb/;                                                           
        include mime.types;                                                                        
    } 
#+END_SRC

